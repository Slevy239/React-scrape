{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\slevy\\\\Documents\\\\reactscrape\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport AddBtn from \"../../components/AddBtn\";\nimport { Row, Col } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport EmptyList from \"../../components/EmptyList\";\nimport './Search.css';\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchRes: [],\n      query: \"\",\n      books: []\n    };\n\n    this.displayRes = data => {\n      this.setState({\n        books: data.items\n      });\n    };\n\n    this.searchGBooks = () => {\n      let url = `https://www.googleapis.com/books/v1/volumes?q=${this.state.query}`;\n      axios.get(url).then(res => {\n        //console.log(res);\n        this.displayRes(res.data);\n      }).catch(err => console.log(err));\n    };\n\n    this.handleInput = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      }); //console.log(\"Query\", this.state.query);\n    };\n  }\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"bookQ\",\n      className: \"form-control form-control-lg\",\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"query\",\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-danger\",\n      onClick: this.searchGBooks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Search for Books\"))), this.state.books && this.state.books.length > 0 ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.books.map(book => {\n      return React.createElement(\"div\", {\n        id: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        key: book.id,\n        authors: book.volumeInfo.authors ? book.volumeInfo.authors : [\"No Author Available\"],\n        title: book.volumeInfo.title,\n        synopsis: book.volumeInfo.description ? book.volumeInfo.description : \"No Description Available\",\n        link: book.volumeInfo.infoLink // thumbnail={book.volumeInfo.imageLinks.thumbnail ?\n        // book.volumeInfo.imageLinks.thumbnail : \"#\"}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(AddBtn, {\n        authors: book.volumeInfo.authors ? book.volumeInfo.authors : [\"No Author Available\"],\n        title: book.volumeInfo.title,\n        synopsis: book.volumeInfo.description ? book.volumeInfo.description : \"No Description Available\",\n        link: book.volumeInfo.infoLink // thumbnail={book.volumeInfo.imageLinks.thumbnail ?\n        //   book.volumeInfo.imageLinks.thumbnail : \"#\"}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    })) : React.createElement(EmptyList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["c:/Users/slevy/Documents/reactscrape/client/src/components/Form/Form.js"],"names":["React","Component","axios","AddBtn","Row","Col","List","ListItem","EmptyList","Form","state","searchRes","query","books","displayRes","data","setState","items","searchGBooks","url","get","then","res","catch","err","console","log","handleInput","event","name","value","target","render","length","map","book","id","volumeInfo","authors","title","description","infoLink"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,uBAAzB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,uBAA/B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAO,cAAP;;AAGA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BS,KAD2B,GACnB;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADmB;;AAAA,SAO3BC,UAP2B,GAOdC,IAAI,IAAI;AACnB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEE,IAAI,CAACE;AAAd,OAAd;AACD,KAT0B;;AAAA,SAW3BC,YAX2B,GAWZ,MAAM;AACnB,UAAIC,GAAG,GAAI,iDACT,KAAKT,KAAL,CAAWE,KACV,EAFH;AAGAV,MAAAA,KAAK,CACFkB,GADH,CACOD,GADP,EAEGE,IAFH,CAEQC,GAAG,IAAI;AACX;AACA,aAAKR,UAAL,CAAgBQ,GAAG,CAACP,IAApB;AACD,OALH,EAMGQ,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB;AAOD,KAtB0B;;AAAA,SAwB3BG,WAxB2B,GAwBbC,KAAK,IAAI;AACrB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,KAAK,CAACG,MAA9B;AAEA,WAAKf,QAAL,CAAc;AACZ,SAACa,IAAD,GAAQC;AADI,OAAd,EAHqB,CAMrB;AACD,KA/B0B;AAAA;;AAoC3BE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,SAAS,EAAC,8BAA5B;AAA2D,MAAA,YAAY,EAAC,KAAxE;AAA8E,MAAA,IAAI,EAAC,MAAnF;AAA0F,MAAA,IAAI,EAAC,OAA/F;AAAuG,MAAA,QAAQ,EAAE,KAAKL,WAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,gBAAhC;AAAiD,MAAA,OAAO,EAAE,KAAKT,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF,CAFF,EAYI,KAAKR,KAAL,CAAWG,KAAX,IAAoB,KAAKH,KAAL,CAAWG,KAAX,CAAiBoB,MAAjB,GAA0B,CAA/C,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKvB,KAAL,CAAWG,KAAX,CAAiBqB,GAAjB,CAAqBC,IAAI,IAAI;AAC5B,aACE;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,QAAA,OAAO,EAAED,IAAI,CAACE,UAAL,CAAgBC,OAAhB,GAA0BH,IAAI,CAACE,UAAL,CAAgBC,OAA1C,GAAoD,CAAC,qBAAD,CAF/D;AAGE,QAAA,KAAK,EAAEH,IAAI,CAACE,UAAL,CAAgBE,KAHzB;AAIE,QAAA,QAAQ,EAAEJ,IAAI,CAACE,UAAL,CAAgBG,WAAhB,GACRL,IAAI,CAACE,UAAL,CAAgBG,WADR,GACsB,0BALlC;AAME,QAAA,IAAI,EAAEL,IAAI,CAACE,UAAL,CAAgBI,QANxB,CAOE;AACE;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAYE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAEN,IAAI,CAACE,UAAL,CAAgBC,OAAhB,GAA0BH,IAAI,CAACE,UAAL,CAAgBC,OAA1C,GAAoD,CAAC,qBAAD,CAD/D;AAEE,QAAA,KAAK,EAAEH,IAAI,CAACE,UAAL,CAAgBE,KAFzB;AAGE,QAAA,QAAQ,EAAEJ,IAAI,CAACE,UAAL,CAAgBG,WAAhB,GACRL,IAAI,CAACE,UAAL,CAAgBG,WADR,GACsB,0BAJlC;AAKE,QAAA,IAAI,EAAEL,IAAI,CAACE,UAAL,CAAgBI,QALxB,CAME;AACA;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADF;AAyBD,KA1BA,CADH,CADD,GA+BC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CJ,CADF,CADF,CADF;AAqDD;;AA1F0B;;AA6F7B,eAAehC,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport AddBtn from \"../../components/AddBtn\";\r\nimport { Row, Col } from \"../../components/Grid\";\r\nimport { List, ListItem } from \"../../components/List\";\r\nimport EmptyList from \"../../components/EmptyList\";\r\nimport './Search.css'\r\n\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    searchRes: [],\r\n    query: \"\",\r\n    books: []\r\n  };\r\n\r\n  displayRes = data => {\r\n    this.setState({ books: data.items });\r\n  };\r\n\r\n  searchGBooks = () => {\r\n    let url = `https://www.googleapis.com/books/v1/volumes?q=${\r\n      this.state.query\r\n      }`;\r\n    axios\r\n      .get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        this.displayRes(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleInput = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    //console.log(\"Query\", this.state.query);\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <div>\r\n            <input id=\"bookQ\" className=\"form-control form-control-lg\" autoComplete=\"off\" type=\"text\" name=\"query\" onChange={this.handleInput} />\r\n            <div id='submit'>\r\n              <div className=\"col\">\r\n\r\n                <button type=\"submit\" className=\"btn btn-danger\" onClick={this.searchGBooks} >\r\n                  Search for Books\r\n          </button>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            {(this.state.books && this.state.books.length > 0) ?\r\n              <List>\r\n                {this.state.books.map(book => {\r\n                  return (\r\n                    <div id=\"item\">\r\n                      <ListItem\r\n                        key={book.id}\r\n                        authors={book.volumeInfo.authors ? book.volumeInfo.authors : [\"No Author Available\"]}\r\n                        title={book.volumeInfo.title}\r\n                        synopsis={book.volumeInfo.description ?\r\n                          book.volumeInfo.description : \"No Description Available\"}\r\n                        link={book.volumeInfo.infoLink}\r\n                        // thumbnail={book.volumeInfo.imageLinks.thumbnail ?\r\n                          // book.volumeInfo.imageLinks.thumbnail : \"#\"}\r\n                      />\r\n\r\n                      <AddBtn\r\n                        authors={book.volumeInfo.authors ? book.volumeInfo.authors : [\"No Author Available\"]}\r\n                        title={book.volumeInfo.title}\r\n                        synopsis={book.volumeInfo.description ?\r\n                          book.volumeInfo.description : \"No Description Available\"}\r\n                        link={book.volumeInfo.infoLink}\r\n                        // thumbnail={book.volumeInfo.imageLinks.thumbnail ?\r\n                        //   book.volumeInfo.imageLinks.thumbnail : \"#\"}\r\n\r\n                      />\r\n                    </div>\r\n                  )\r\n                })}\r\n              </List>\r\n              :\r\n              <EmptyList />\r\n            }\r\n\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}