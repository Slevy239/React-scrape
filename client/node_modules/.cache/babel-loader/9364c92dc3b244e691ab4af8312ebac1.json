{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slevy\\\\Documents\\\\reactscrape\\\\client\\\\src\\\\pages\\\\Gif.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from '../components/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { List, ListItem } from \"../components/List\";\nimport TextField from '@material-ui/core/TextField'; // import React, { Component } from 'react';\n\nimport Search from './Search'; // import Trending from './Trending';\n\nclass Gif extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: false,\n      searchText: '',\n      gif: {}\n    };\n  }\n\n  searchGif(searchText) {\n    this.setState({\n      loader: true\n    });\n    this.getUrl(searchText, gif => {\n      // callback(myJson)\n      const getDetails = {\n        image: gif.data.fixed_height_downsampled_url,\n        title: gif.data.title,\n        gifUrl: gif.data.url\n      };\n      this.setState({\n        loader: false,\n        searchText: searchText,\n        gif: getDetails\n      });\n    });\n  }\n\n  getUrl(searchText, callback) {\n    const url = `http://api.giphy.com/v1/gifs/random?&tag=${searchText}&api_key=aUhPqNQX1V9W5wSNJ9J0FOaQdvwgHH7O`;\n    fetch(url).then(response => response.json()).catch(error => console.error('Error:', error)).then(myJson => callback(myJson));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"inscApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"The GIF Search \"), React.createElement(TextField, {\n      onSearch: this.searchGif.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Card, {\n      loader: this.state.loader,\n      data: this.state.gif,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Gif;","map":{"version":3,"sources":["C:/Users/slevy/Documents/reactscrape/client/src/pages/Gif.js"],"names":["React","Component","Row","Col","Card","CardContent","List","ListItem","TextField","Search","Gif","constructor","props","state","loader","searchText","gif","searchGif","setState","getUrl","getDetails","image","data","fixed_height_downsampled_url","title","gifUrl","url","callback","fetch","then","response","json","catch","error","console","myJson","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,oBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AAGA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AACxBU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG,KADA;AAETC,MAAAA,UAAU,EAAG,EAFJ;AAGTC,MAAAA,GAAG,EAAG;AAHG,KAAb;AAKH;;AAEDC,EAAAA,SAAS,CAACF,UAAD,EAAa;AAClB,SAAKG,QAAL,CAAc;AACVJ,MAAAA,MAAM,EAAE;AADE,KAAd;AAGA,SAAKK,MAAL,CAAYJ,UAAZ,EAAwBC,GAAG,IAAI;AAAE;AAC7B,YAAMI,UAAU,GAAG;AACfC,QAAAA,KAAK,EAAGL,GAAG,CAACM,IAAJ,CAASC,4BADF;AAEfC,QAAAA,KAAK,EAAIR,GAAG,CAACM,IAAJ,CAASE,KAFH;AAGfC,QAAAA,MAAM,EAAGT,GAAG,CAACM,IAAJ,CAASI;AAHH,OAAnB;AAKA,WAAKR,QAAL,CAAc;AACVJ,QAAAA,MAAM,EAAG,KADC;AAEVC,QAAAA,UAAU,EAAEA,UAFF;AAGVC,QAAAA,GAAG,EAAGI;AAHI,OAAd;AAKH,KAXD;AAYH;;AAEDD,EAAAA,MAAM,CAACJ,UAAD,EAAaY,QAAb,EAAuB;AACzB,UAAMD,GAAG,GAAI,4CAA2CX,UAAW,2CAAnE;AACAa,IAAAA,KAAK,CAACF,GAAD,CAAL,CACCG,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECC,KAFD,CAEOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAFhB,EAGCJ,IAHD,CAGMM,MAAM,IAAIR,QAAQ,CAACQ,MAAD,CAHxB;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,SAAD;AACI,MAAA,QAAQ,EAAE,KAAKnB,SAAL,CAAeoB,IAAf,CAAoB,IAApB,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAKI,oBAAC,IAAD;AACI,MAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWC,MADvB;AAEI,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,GAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAaH;;AAlDuB;;AAqD5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col } from '../components/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { List, ListItem } from \"../components/List\";\r\nimport TextField from '@material-ui/core/TextField';\r\n// import React, { Component } from 'react';\r\nimport Search from './Search';\r\n// import Trending from './Trending';\r\n\r\n\r\nclass Gif extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loader : false,\r\n            searchText : '',\r\n            gif : {},\r\n        };\r\n    }\r\n\r\n    searchGif(searchText) {\r\n        this.setState({\r\n            loader: true\r\n        });\r\n        this.getUrl(searchText, gif => { // callback(myJson)\r\n            const getDetails = {\r\n                image : gif.data.fixed_height_downsampled_url,\r\n                title :  gif.data.title,\r\n                gifUrl : gif.data.url\r\n            }\r\n            this.setState({\r\n                loader : false,\r\n                searchText: searchText,\r\n                gif : getDetails\r\n            });\r\n        })\r\n    }\r\n\r\n    getUrl(searchText, callback) {\r\n        const url = `http://api.giphy.com/v1/gifs/random?&tag=${searchText}&api_key=aUhPqNQX1V9W5wSNJ9J0FOaQdvwgHH7O`\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .catch(error => console.error('Error:', error))\r\n        .then(myJson => callback(myJson))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"inscApp\">The GIF Search </h1>\r\n                <TextField\r\n                    onSearch={this.searchGif.bind(this)}\r\n                />\r\n                <Card\r\n                    loader={this.state.loader}\r\n                    data={this.state.gif}\r\n                />\r\n                {/* <Trending /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gif"]},"metadata":{},"sourceType":"module"}