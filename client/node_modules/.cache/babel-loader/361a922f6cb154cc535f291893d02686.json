{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slevy\\\\Documents\\\\reactscrape\\\\client\\\\src\\\\components\\\\List\\\\index.js\";\nimport React from \"react\";\nimport { Container } from \"../Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Moment from 'react-moment';\nimport AddBtn from '../';\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n}); // BookList renders a bootstrap list item\n\nexport function List({\n  children\n}) {\n  return React.createElement(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, children);\n} // RecipeListItem renders a bootstrap list item containing data from the recipe api call\n\nexport class ListItem extends React.Component {\n  render() {\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: this.props.id,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.teams.join(' vs. ')), React.createElement(Typography, {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Start Time:\"), \" \", React.createElement(Moment, {\n      fromat: \"YYYY/MM/DD\",\n      unix: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.commence_time)), React.createElement(Typography, {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Home Team:\"), \" \", this.props.home_team), React.createElement(Typography, {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.sites[1].site_nice), \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" Away Team Odds: \", Math.round(-100 / (this.props.sites[1].odds.h2h[1] - 1)))), React.createElement(AddBtn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/slevy/Documents/reactscrape/client/src/components/List/index.js"],"names":["React","Container","Card","CardContent","Typography","makeStyles","Moment","AddBtn","useStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","List","children","ListItem","Component","render","props","id","teams","join","commence_time","home_team","sites","site_nice","Math","round","odds","h2h"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Container } from \"../Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Moment from 'react-moment';\r\nimport AddBtn from '../'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\n// BookList renders a bootstrap list item\r\nexport function List({ children }) {\r\n  return (\r\n    <ul className=\"list-group\" >{children}</ul>\r\n  );\r\n}\r\n\r\n// RecipeListItem renders a bootstrap list item containing data from the recipe api call\r\nexport class ListItem extends React.Component {\r\n  render() {\r\n    return (\r\n      <li>\r\n        <Container className='card-container'>\r\n          <Card id={this.props.id}  variant='outlined'>\r\n            <CardContent>\r\n\r\n              {/* <h3 className='card-title'>{this.props.homeName} vs. {this.props.awayName}</h3> */}\r\n              <Typography>{this.props.teams.join(' vs. ')}</Typography>\r\n              <Typography className='card-title'><strong>Start Time:</strong> <Moment fromat='YYYY/MM/DD' unix>{this.props.commence_time}</Moment></Typography>\r\n              <Typography className='card-body'><strong>Home Team:</strong> {this.props.home_team}</Typography>\r\n              <Typography className='card-body'> <strong>{this.props.sites[1].site_nice}</strong> <span> Away Team Odds: {Math.round((-100) / (this.props.sites[1].odds.h2h[1] - 1))}</span></Typography>\r\n<AddBtn></AddBtn>\r\n            </CardContent>\r\n          </Card>\r\n        </Container>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}