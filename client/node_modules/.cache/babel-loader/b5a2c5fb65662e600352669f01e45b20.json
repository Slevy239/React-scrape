{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slevy\\\\Documents\\\\reactscrape\\\\client\\\\src\\\\pages\\\\Gif.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from '../components/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { List, ListItem } from \"../components/List\";\nimport TextField from '@material-ui/core/TextField';\n\nclass Gif extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n      this.SearchApi();\n      console.log(this.state);\n    };\n\n    this.state = {\n      gifs: {\n        data: []\n      },\n      query: \"\"\n    };\n  }\n\n  SearchApi() {\n    fetch(`http://api.giphy.com/v1/gifs/search?p=${this.state.query}&api_key=dc6zaTOxFJmzC&limit=10`).then(res => res.json()).catch(error => console.error('Error:', error)).then(result => {\n      console.log(result);\n      this.setState({\n        gifs: result\n      });\n    });\n  }\n\n  render() {\n    // console.log(this.state.results[1])\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"Search Gif\",\n      variant: \"outlined\",\n      onChange: this.handleInput,\n      name: \"query\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(Col, {\n      size: \"md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"gifs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.gifs.data.map(item => {\n      return React.createElement(\"div\", {\n        id: \"item\",\n        key: item.id,\n        className: item.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Card, {\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: item.images.original.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })))));\n    }))))));\n  }\n\n}\n\nexport default Gif;","map":{"version":3,"sources":["C:/Users/slevy/Documents/reactscrape/client/src/pages/Gif.js"],"names":["React","Component","Row","Col","Card","CardContent","List","ListItem","TextField","Gif","constructor","props","handleInput","event","name","value","target","setState","SearchApi","console","log","state","gifs","data","query","fetch","then","res","json","catch","error","result","render","map","item","id","key","images","original","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col } from '../components/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { List, ListItem } from \"../components/List\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nclass Gif extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            gifs: { data: [] },\r\n            query: \"\"\r\n        };\r\n    }\r\n\r\n    SearchApi() {\r\n        fetch(`http://api.giphy.com/v1/gifs/search?p=${this.state.query}&api_key=dc6zaTOxFJmzC&limit=10`)\r\n            .then(res => res.json())\r\n            .catch(error => console.error('Error:', error))\r\n            .then((result) => {\r\n                console.log(result)\r\n                this.setState({\r\n                    gifs: result,\r\n                });\r\n            })\r\n    }\r\n    handleInput = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        this.SearchApi();\r\n        console.log(this.state)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        // console.log(this.state.results[1])\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <form noValidate autoComplete=\"off\" >\r\n                        <TextField id=\"outlined-basic\" label=\"Search Gif\" variant=\"outlined\" onChange={this.handleInput} name='query' />\r\n                    </form>\r\n                    <Col size='md-12'>\r\n                        <div id='gifs'>\r\n                            <List>\r\n                                {this.state.gifs.data.map(item => {\r\n                                    return (\r\n                                        <div id='item' key={item.id} className={item.key}>\r\n                                            <Card variant='outlined'>\r\n                                                <CardContent>\r\n                                                    <div>\r\n                                                        <img src={item.images.original.url} />\r\n                                                        {/* <Image src={this.state.results[1].url} /> */}\r\n                                                    </div>\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </List>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default Gif"]},"metadata":{},"sourceType":"module"}