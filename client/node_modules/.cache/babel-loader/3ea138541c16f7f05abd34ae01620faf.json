{"ast":null,"code":"// import axios from \"axios\";\n// export default {\n//   // Gets all books\n//   getResults: function() {\n//     return axios.get(\"/api/results\");\n//   },\n//   // Gets the book with the given id\n//   getResult: function(id) {\n//     return axios.get(\"/api/results/\" + id);\n//   },\n//   // Deletes the book with the given id\n//   deleteResult: function(id) {\n//     return axios.delete(\"/api/results/\" + id);\n//   },\n//   // Saves a book to the database\n//   saveResult: function(bookData) {\n//     return axios.post(\"/api/results\", bookData);\n//   }\n// };\nexport default {\n  getResults: () => {\n    return fetch('/Result').then(res => res.json()).then(data => data);\n  },\n  deleteResult: _id => {\n    return fetch(`/Result/${_id}`, {\n      method: 'delete'\n    }).then(res => res.json()).then(data => data);\n  },\n  updateResult: Result => {\n    return fetch(`/Result/${Result._id}`, {\n      method: \"put\",\n      body: JSON.stringify(Result),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => data);\n  },\n  createResult: Result => {\n    return fetch(`/Result`, {\n      method: 'post',\n      body: JSON.stringify(Result),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => data);\n  }\n};","map":{"version":3,"sources":["C:/Users/slevy/Documents/reactscrape/client/src/utils/API.js"],"names":["getResults","fetch","then","res","json","data","deleteResult","_id","method","updateResult","Result","body","JSON","stringify","headers","createResult"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACbA,EAAAA,UAAU,EAAG,MAAI;AACb,WAAOC,KAAK,CAAC,SAAD,CAAL,CACEC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAEOG,IAAI,IAAIA,IAFf,CAAP;AAGH,GALY;AAMbC,EAAAA,YAAY,EAAIC,GAAD,IAAO;AAClB,WAAON,KAAK,CAAE,WAAUM,GAAI,EAAhB,EACA;AAACC,MAAAA,MAAM,EAAG;AAAV,KADA,CAAL,CAEMN,IAFN,CAEWC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFlB,EAGMF,IAHN,CAGWG,IAAI,IAAIA,IAHnB,CAAP;AAIH,GAXY;AAYbI,EAAAA,YAAY,EAAIC,MAAD,IAAU;AACrB,WAAOT,KAAK,CAAE,WAAUS,MAAM,CAACH,GAAI,EAAvB,EACA;AAACC,MAAAA,MAAM,EAAG,KAAV;AACCG,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,MAAf,CADP;AAECI,MAAAA,OAAO,EAAG;AACN,wBAAiB;AADX;AAFX,KADA,CAAL,CAKUZ,IALV,CAKeC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALtB,EAMUF,IANV,CAMeG,IAAI,IAAIA,IANvB,CAAP;AAOH,GApBY;AAqBbU,EAAAA,YAAY,EAAIL,MAAD,IAAU;AACrB,WAAOT,KAAK,CAAE,SAAF,EACR;AAACO,MAAAA,MAAM,EAAG,MAAV;AACAG,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,MAAf,CADN;AAEAI,MAAAA,OAAO,EAAG;AACN,wBAAiB;AADX;AAFV,KADQ,CAAL,CAKCZ,IALD,CAKMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALb,EAMEF,IANF,CAMOG,IAAI,IAAIA,IANf,CAAP;AAOH;AA7BY,CAAf","sourcesContent":["// import axios from \"axios\";\r\n\r\n// export default {\r\n//   // Gets all books\r\n//   getResults: function() {\r\n//     return axios.get(\"/api/results\");\r\n//   },\r\n//   // Gets the book with the given id\r\n//   getResult: function(id) {\r\n//     return axios.get(\"/api/results/\" + id);\r\n//   },\r\n//   // Deletes the book with the given id\r\n//   deleteResult: function(id) {\r\n//     return axios.delete(\"/api/results/\" + id);\r\n//   },\r\n//   // Saves a book to the database\r\n//   saveResult: function(bookData) {\r\n//     return axios.post(\"/api/results\", bookData);\r\n//   }\r\n// };\r\nexport default {\r\n  getResults : ()=>{\r\n      return fetch('/Result')\r\n              .then(res => res.json())\r\n              .then(data => data);\r\n  },\r\n  deleteResult : (_id)=>{\r\n      return fetch(`/Result/${_id}`,\r\n                  {method : 'delete'})\r\n                  .then(res => res.json())\r\n                  .then(data => data);\r\n  },\r\n  updateResult : (Result)=>{\r\n      return fetch(`/Result/${Result._id}`,\r\n                  {method : \"put\",\r\n                   body: JSON.stringify(Result),\r\n                   headers : {\r\n                       \"Content-Type\" : \"application/json\"\r\n                   }}).then(res => res.json())\r\n                      .then(data => data);\r\n  },\r\n  createResult : (Result)=>{\r\n      return fetch(`/Result`,\r\n          {method : 'post',\r\n          body: JSON.stringify(Result),\r\n          headers : {\r\n              \"Content-Type\" : \"application/json\"\r\n          }}).then(res => res.json())\r\n              .then(data => data);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}